{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = 'http://localhost:8081';\nconst AUTH_USER = 'authenticatedUser';\n\nclass AuthenticationService {\n  authenticateUser(user) {\n    return axios.get(API_URL + '/user/signin', {\n      headers: {\n        authorization: this.createBasicAuthToken(user.email, user.password)\n      }\n    });\n  }\n\n  createBasicAuthToken(email, password) {\n    return 'Basic ' + window.btoa(email + \":\" + password);\n  }\n  /*  getUserdetails() {\r\n       let user = sessionStorage.getItem('authUser');\r\n       let role = sessionStorage.getItem('role');\r\n       return [user, role];\r\n      } */\n\n\n  registerSuccessfulLogin(username) {\n    console.log('resisterSuccessful login');\n    sessionStorage.setItem(AUTH_USER, username);\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(AUTH_USER);\n    if (user != null) return true;else return false;\n  }\n\n  userSignUp(user) {\n    return axios.post(API_URL + '/user/signup', user);\n  }\n\n  logout() {\n    sessionStorage.removeItem(AUTH_USER);\n  }\n\n  setupAxiosInterceptors(token) {\n    axios.interceptors.request.use(config => {\n      if (this.isUserLoggedIn()) {\n        config.headers.authorization = token;\n      }\n\n      return config;\n    });\n  }\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"names":["axios","API_URL","AUTH_USER","AuthenticationService","authenticateUser","user","get","headers","authorization","createBasicAuthToken","email","password","window","btoa","registerSuccessfulLogin","username","console","log","sessionStorage","setItem","isUserLoggedIn","getItem","userSignUp","post","logout","removeItem","setupAxiosInterceptors","token","interceptors","request","use","config"],"sources":["C:/Users/saura/Documents/Blog-web-app/blog-app/src/service/AuthenticationService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = 'http://localhost:8081'\r\nconst AUTH_USER = 'authenticatedUser'\r\n\r\nclass AuthenticationService {\r\n\r\n\r\n\r\n    authenticateUser(user) {\r\n        return axios.get(API_URL + '/user/signin',\r\n            { headers: { authorization: this.createBasicAuthToken(user.email, user.password) } })\r\n    }\r\n\r\n    createBasicAuthToken(email, password) {\r\n        return 'Basic ' + window.btoa(email + \":\" + password)\r\n    }\r\n\r\n    /*  getUserdetails() {\r\n         let user = sessionStorage.getItem('authUser');\r\n         let role = sessionStorage.getItem('role');\r\n         return [user, role];\r\n \r\n     } */\r\n\r\n    registerSuccessfulLogin(username) {\r\n        console.log('resisterSuccessful login')\r\n        sessionStorage.setItem(AUTH_USER, username)\r\n    }\r\n\r\n    isUserLoggedIn() {\r\n        let user = sessionStorage.getItem(AUTH_USER)\r\n        if (user != null)\r\n            return true\r\n        else\r\n            return false\r\n    }\r\n\r\n    userSignUp(user) {\r\n        return axios.post(API_URL + '/user/signup', user);\r\n    }\r\n\r\n    logout() {\r\n        sessionStorage.removeItem(AUTH_USER)\r\n    }\r\n\r\n    setupAxiosInterceptors(token) {\r\n\r\n        axios.interceptors.request.use(\r\n            (config) => {\r\n                if (this.isUserLoggedIn()) {\r\n                    config.headers.authorization = token\r\n                }\r\n                return config\r\n            }\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default new AuthenticationService();"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,uBAAhB;AACA,MAAMC,SAAS,GAAG,mBAAlB;;AAEA,MAAMC,qBAAN,CAA4B;EAIxBC,gBAAgB,CAACC,IAAD,EAAO;IACnB,OAAOL,KAAK,CAACM,GAAN,CAAUL,OAAO,GAAG,cAApB,EACH;MAAEM,OAAO,EAAE;QAAEC,aAAa,EAAE,KAAKC,oBAAL,CAA0BJ,IAAI,CAACK,KAA/B,EAAsCL,IAAI,CAACM,QAA3C;MAAjB;IAAX,CADG,CAAP;EAEH;;EAEDF,oBAAoB,CAACC,KAAD,EAAQC,QAAR,EAAkB;IAClC,OAAO,WAAWC,MAAM,CAACC,IAAP,CAAYH,KAAK,GAAG,GAAR,GAAcC,QAA1B,CAAlB;EACH;EAED;AACJ;AACA;AACA;AACA;;;EAGIG,uBAAuB,CAACC,QAAD,EAAW;IAC9BC,OAAO,CAACC,GAAR,CAAY,0BAAZ;IACAC,cAAc,CAACC,OAAf,CAAuBjB,SAAvB,EAAkCa,QAAlC;EACH;;EAEDK,cAAc,GAAG;IACb,IAAIf,IAAI,GAAGa,cAAc,CAACG,OAAf,CAAuBnB,SAAvB,CAAX;IACA,IAAIG,IAAI,IAAI,IAAZ,EACI,OAAO,IAAP,CADJ,KAGI,OAAO,KAAP;EACP;;EAEDiB,UAAU,CAACjB,IAAD,EAAO;IACb,OAAOL,KAAK,CAACuB,IAAN,CAAWtB,OAAO,GAAG,cAArB,EAAqCI,IAArC,CAAP;EACH;;EAEDmB,MAAM,GAAG;IACLN,cAAc,CAACO,UAAf,CAA0BvB,SAA1B;EACH;;EAEDwB,sBAAsB,CAACC,KAAD,EAAQ;IAE1B3B,KAAK,CAAC4B,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACKC,MAAD,IAAY;MACR,IAAI,KAAKX,cAAL,EAAJ,EAA2B;QACvBW,MAAM,CAACxB,OAAP,CAAeC,aAAf,GAA+BmB,KAA/B;MACH;;MACD,OAAOI,MAAP;IACH,CANL;EAQH;;AAnDuB;;AAwD5B,eAAe,IAAI5B,qBAAJ,EAAf"},"metadata":{},"sourceType":"module"}